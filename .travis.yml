language: node_js
node_js: 10
dist: xenial
cache:
  yarn: true
  directories:
    - node_modules

# Set some immportant things to help maximize our CI performance
before_install:
  # Get list of files that have changed
  - export LANDO_CHANGED_FILES=$(git diff --name-only $TRAVIS_COMMIT_RANGE | cat)
  # Assess whether our web props have changed
  - export LANDO_API_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e api/ &>/dev/null && echo true || echo false)
  - export LANDO_BLOG_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e blog/ &>/dev/null && echo true || echo false)
  - export LANDO_DOCS_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e docs/ &>/dev/null && echo true || echo false)
  - export LANDO_EVENTS_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e events/ &>/dev/null && echo true || echo false)
  - export LANDO_METRICS_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e metrics/ &>/dev/null && echo true || echo false)
  - export LANDO_SITE_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e website/ &>/dev/null && echo true || echo false)
  # Assess what parts of lando have changed
  - export LANDO_CODE_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e bin/ -e lib/ -e plugins/ &>/dev/null && echo true || echo false)
  - export LANDO_TESTS_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e examples/ -e test/ &>/dev/null && echo true || echo false)
  - export LANDO_BUILD_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e .travis.yml -e /scripts &>/dev/null && echo true || echo false)
  - export LANDO_INSTALLER_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e /installer -e /scripts &>/dev/null && echo true || echo false)
  # Assess build/devops changes
  - export LANDO_BUILD_CHANGED=$(echo $LANDO_CHANGED_FILES | grep -e .travis.yml -e scripts/ &>/dev/null && echo true || echo false)

  # Check the status of the important things
  - env | grep LANDO_
  - ./scripts/travis-env.sh

# Run some sanity checks
before_script:
  - node --version
  - yarn --version
  - node bin/lando.js version
install: yarn

jobs:
  include:
    # Preflight
    - stage: preflight
      name: Code Linter
      script:
        - yarn lint
        - yarn lint:sites

    # Test
    - stage: test
      name: Unit Tests - Linux
      script: yarn test:unit
      if: type = pull_request
    - name: Unit Tests - macOS
      os: osx
      osx_image: xcode11.2
      script: yarn test:unit
      if: type = pull_request
    - name: Unit Tests - Windoze
      os: windows
      script: yarn test:unit
      env: YARN_GPG=no GRADLE_OPTS=-Dorg.gradle.daemon=false
      if: type = pull_request

    # Build
    # Web builds
    - stage: Build
      name: API
      script: if [[ "$LANDO_API_CHANGED" == "true" ]] ; then true test; fi
      if: |
        type = push AND \
        type != pull_request
    - name: Blog
      script: if [[ "$LANDO_BLOG_CHANGED" == "true" ]] ; then yarn build:blog test; fi
      if: |
        type = push AND \
        type != pull_request
    - name: Documentation
      script: if [[ "$LANDO_DOCS_CHANGED" == "true" ]] ; then yarn build:docs test; fi
      if: |
        type = push AND \
        type != pull_request
    - name: Events
      script: if [[ "$LANDO_EVENTS_CHANGED" == "true" ]] ; then yarn build:events test; fi
      if: |
        type = push AND \
        type != pull_request
    - name: Metrics
      script: if [[ "$LANDO_METRICS_CHANGED" == "true" ]] ; then true test; fi
      if: |
        type = push AND \
        type != pull_request
    - name: Website
      script: if [[ "$LANDO_SITE_CHANGED" == "true" ]] ; then yarn build:site test; fi
      if: |
        type = push AND \
        type != pull_request

    # CLI builds
    - name: CLI Binary - Linux
      script:
        - yarn pkg:cli
        - ./dist/cli/lando-* version
      if: |
        type = push AND \
        type != pull_request
    - name: CLI Binary - macOS
      os: osx
      osx_image: xcode11.2
      script:
        - yarn pkg:cli
        - ./dist/cli/lando-* version
      if: |
        type = push AND \
        type != pull_request
    - name: CLI Binary - Windoze
      os: windows
      env: YARN_GPG=no GRADLE_OPTS=-Dorg.gradle.daemon=false
      script:
        - yarn pkg:cli
        - ./dist/cli/lando-* version
      if: |
        type = push AND \
        type != pull_request

    # Installer builds
    - name: Installer - Pacman
      env: LANDO_PKG_TYPE=pacman
      script:
        - mkdir -p releases
        - yarn pkg:full
      if: |
        type = push AND \
        type != pull_request
    - name: Installer - RPM
      env: LANDO_PKG_TYPE=rpm
      script:
        - mkdir -p releases
        - yarn pkg:full
      if: |
        type = push AND \
        type != pull_request
    - name: Installer - DEB
      env: LANDO_PKG_TYPE=deb
      script:
        - mkdir -p releases
        - yarn pkg:full
      if: |
        type = push AND \
        type != pull_request
    - name: Installer - DMG
      os: osx
      osx_image: xcode11.2
      env: LANDO_PKG_TYPE=dmg LANDO_SUDO_PASSWORD=
      before_script: ./scripts/import-apple-keys.sh
      script:
        - mkdir -p releases
        - yarn pkg:full
      if: |
        type = push AND \
        type != pull_request
    - name: Installer - EXE
      os: windows
      env: YARN_GPG=no GRADLE_OPTS=-Dorg.gradle.daemon=false LANDO_PKG_TYPE=exe
      before_script:
        - git config --global core.autocrlf true
        - choco install innosetup --version=5.5.9 --allow-empty-checksums
      script:
        - mkdir -p releases
        - yarn pkg:full
      if: |
        type = push AND \
        type != pull_request

    # Deploy
    - stage: deploy
      name: "Deploy to GCP"
      script: |
        ./scripts/travis-env.sh
        node -v
      if: env(LANDO) IS present

      # Edit the package.json if this isn't an official release
      # - if [ -z "$TRAVIS_TAG" ]; then node ./scripts/dev-version.js; fi
      # Do some sanity checks

stages:
  - preflight
  - test
  - build
  - deploy
